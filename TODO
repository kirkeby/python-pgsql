* Update documentation:
  - Describe connection.typecasts configuration.
  - Add docstrings.

* Go through entire module and check for PEP 249 violations.

* Replace .notices with .messages and fix PEP compliance.

* Optionally use the warnings-framework to warn about notices.

* Fix the implementation of cursor/itercursor/prepare:
  * connection.prepare should return a special object, which .execute
    can be called with, and it will execute the prepared statement.
  * Cursor/IterCursor needs a sprinkling of the magic refactoring
    pixie-dust; they should be able to share every method but
    .fetchmany and .close.
  * Cursor needs a __del__-method.

* Run all the tests with both different kinds of cursor (normal and
  server-side.)
  This might not be easy exactly, since the prepared cursor naturally has a
  different API. But, at the least we should try all the cursor-wielding tests
  with cursor and itercursors.
  Also, we need proper testing of all combinations of prepared/raw SQL
  and normal/server-side cursors (after the Great Refactoring, of course.)

* Fix FIXMEs.

* Optionally disable check for /\$[0-9]/-style params.

* Release new version (new name? The API has changed quite a bit.)

* Explicitly handle unicode SQL strings.

* Currently we send the bind parameters in text mode to the
  server. When we retrieve the results, the result sets are also
  retrieved in text mode and have to be converted from string
  representation to Python object types. PostgreSQL supports binary mode
  transfers both ways, but documentation on how various data types need
  to be encapsulated in binary mode is sorely lacking.

* Data types which are specific to PostgreSQL are not handled
  by these bindings, instead they are returned as strings;
  the affected types are geometric types, arrays, network addresses
  and bitstrings.
