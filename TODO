* Explicitly handle unicode SQL strings.

* Run all the tests with all three different kinds of cursor (normal,
  prepared and server-side.) This might not be easy exactly, since
  the prepared cursor naturally has a different API. But, at the least
  we should try all the cursor-wielding tests with cursor and itercursors.

* Fix FIXMEs.

* Optionally disable check for /\$[0-9]/-style params.

* Remove the dict extensions methods, and other spurious extensions to the
  DB API; methods like this should instead go in an external DB-API compatible
  helper library (which could also translate between the different bind
  parameter styles.)

* Update documentation:
  - Fix description of bind-parameters.
  - Describe str/unicode handling.
  - Remove refernces to dead extensions methods.
  - Describe connection.typecasts configuration.
  - Reference:
    http://archives.postgresql.org/pgsql-announce/2006-09/msg00002.php

* Release new version (new name?).

* The large objects interface needs some attention as well (note: this is
  not the same as using BYTEA fields in a table. Large objects are a
  PostgreSQL specific thing. BYTEA columns work just fine)

* Currently we send the bind parameters in text mode to the
  server. When we retrieve the results, the result sets are also
  retrieved in text mode and have to be converted from string
  representation to Python object types. PostgreSQL supports binary mode
  transfers both ways, but documentation on how various data types need
  to be encapsulated in binary mode is sorely lacking.

* Data types which are specific to PostgreSQL are not handled
  by these bindings, instead they are returned as buffer objects;
  the affected types are geometric types, arrays, network addresses
  and bitstrings.
